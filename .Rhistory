knitr::opts_chunk$set(echo = TRUE)
# Conexión a la base de datos
conn <- dbConnect(SQLite(), "baseball.db")
knitr::opts_chunk$set(echo = TRUE)
# Cargamos las librerías necesarias para conectarnos y manipular la base de datos
library(dplyr)
library(ggplot2)
library(DBI)
library(dbplyr)
library(RSQLite)
library(tidyr)
library(lubridate)
library(stringr)
library(knitr)
library(visdat)
library(skimr)
library(DiagrammeR)
conn <- DBI::dbConnect(RSQLite::SQLite(), "baseball.db")
# Conexión a la base de datos
conn <- dbConnect(SQLite(), "baseball.db")
# Listar tablas de la base
tablas <- dbListTables(conn)
# Crear objetos R para cada tabla
for (tabla in tablas) {
assign(tabla, dbReadTable(conn, tabla))
}
# Resumen de variables para cada tabla usando skim()
skim(bateo)
skim(escuelas)
skim(escuelasJugadores)
skim(field)
skim(nombres)
skim(pitcheo)
skim(salarios)
skim(salonFama)
# Diagrama de relaciones principales entre las tablas
#grViz("
digraph baseball_db {
# Conexión a la base de datos
conn <- dbConnect(SQLite(), "baseball.db")
# Listar tablas de la base
tablas <- dbListTables(conn)
# Crear objetos R para cada tabla
for (tabla in tablas) {
assign(tabla, dbReadTable(conn, tabla))
}
# Resumen de variables para cada tabla usando skim()
skim(bateo)
skim(escuelas)
skim(escuelasJugadores)
skim(field)
skim(nombres)
skim(pitcheo)
skim(salarios)
skim(salonFama)
# Diagrama de relaciones principales entre las tablas
#grViz(" digraph baseball_db {
#
#  node [shape = box, style=filled, fillcolor=lightblue, #fontname=Helvetica]
#
#  bateo -> nombres [label = 'playerID']
#  pitcheo -> nombres [label = 'playerID']
#  field -> nombres [label = 'playerID']
#  salarios -> nombres [label = 'playerID']
#  escuelasJugadores -> nombres [label = 'playerID']
#  escuelasJugadores -> escuelas [label = 'schoolID']
#  salonFama -> nombres [label = 'playerID']
#
#  nombres [shape=ellipse, fillcolor=lightgreen]
#  escuelas [shape=ellipse, fillcolor=lightpink]
#}
#")
# Creamos una tabla resumen con el número de filas por cada tabla
resumen_tablas <- tibble::tibble(
nombre_tabla = tablas,
num_filas = sapply(tablas, function(t) nrow(get(t)))
)
# Mostramos la tabla
knitr::kable(resumen_tablas, caption = "Resumen de tablas en la base de datos 'baseball.db'")
# Calculamos la duración de la carrera de cada jugador
carrera_jugadores <- bateo |>
group_by(playerID) |>
summarise(
anio_inicio = min(yearID, na.rm = TRUE),
anio_fin = max(yearID, na.rm = TRUE),
duracion = anio_fin - anio_inicio + 1
)
# Obtenemos la posición más común (principal) para cada jugador desde la tabla de field
posicion_jugador <- field |>
group_by(playerID, POS) |>
summarise(total_partidos = sum(G, na.rm = TRUE), .groups = "drop") |>
group_by(playerID) |>
slice_max(order_by = total_partidos, n = 1, with_ties = FALSE) |>
select(playerID, POS)
# Unimos la duración con la posición
jugadores_duracion_pos <- carrera_jugadores |>
inner_join(posicion_jugador, by = "playerID")
# Calculamos el promedio de duración por posición
duracion_posicion <- jugadores_duracion_pos |>
group_by(POS) |>
summarise(
promedio_duracion = mean(duracion, na.rm = TRUE),
conteo_jugadores = n()
)
# Ahora sí, generamos el gráfico
ggplot(duracion_posicion, aes(x = reorder(POS, promedio_duracion), y = promedio_duracion, fill = POS)) +
geom_col(width = 0.6, show.legend = FALSE) +
geom_text(aes(label = round(promedio_duracion, 2)), vjust = -0.5, size = 4.2, fontface = "bold") +
ylim(0, 7) +  # ← Aumentamos el límite superior del eje Y
labs(
title = "Duración Promedio de la Carrera por Posición",
subtitle = "Jugadores profesionales de béisbol según posición registrada en fielding",
x = "Posición",
y = "Duración promedio (años)"
) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold"),
axis.text.x = element_text(face = "bold")
)
# Mostramos la tabla final
knitr::kable(duracion_posicion, caption = "Duración promedio de la carrera según posición")
