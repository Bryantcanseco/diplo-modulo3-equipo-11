salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID, POS) %>%
summarise(
salario_total = sum(salary, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(lanzador = ifelse(POS == "P", TRUE, FALSE))
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID, POS) %>%
summarise(
salario_total = sum(salary, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(lanzador = ifelse(POS == "P", TRUE, FALSE))
salarios_posiciones
field_clasificado <- field %>%
group_by(playerID, yearID, POS) %>%
summarise(juegos = sum(G, na.rm = TRUE), .groups = "drop") %>%
group_by(playerID, yearID) %>%
slice_max(order_by = juegos, with_ties = FALSE) %>%
ungroup() %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
field_clasificado <- field %>%
group_by(playerID, yearID, POS) %>%
summarise(juegos = sum(G, na.rm = TRUE), .groups = "drop") %>%
group_by(playerID, yearID) %>%
slice_max(order_by = juegos, with_ties = FALSE) %>%
ungroup() %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
field_clasificado
head(bateo)
head(escuelas)
head(escuelasJugadores)
head(field)
head(nombres)
head(pitcheo)
head(salarios)
head(salonFama)
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = sum(salary, na.rm = TRUE),
juegos = sum(G, na.rm = TRUE),
.groups = "drop"
) %>%
group_by(playerID, yearID) %>%
slice_max(order_by = juegos, with_ties = FALSE) %>%
ungroup() %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = sum(G, na.rm = TRUE),
.groups = "drop"
) %>%
group_by(playerID, yearID) %>%
slice_max(order_by = juegos, with_ties = FALSE) %>%
ungroup() %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
) %>%
group_by(playerID, yearID) %>%
slice_max(order_by = juegos, with_ties = FALSE) %>%
ungroup() %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
) %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
) %>%
group_by(playerID, yearID) %>%
slice_max(order_by = juegos, with_ties = FALSE) %>%
ungroup() %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
)
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
) %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
) %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador")) %>%
group_by(playerID, tipo_jugador)
salarios_posiciones
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
) %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
) %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
salarios_acumulados <- salarios_posiciones %>%
group_by(playerID, POS) %>%
summarise(
salario_total = sum(salario_total, na.rm = TRUE),
juegos_total = sum(juegos, na.rm = TRUE),
tipo_jugador = first(tipo_jugador),  # conservar etiqueta
.groups = "drop"
)
salarios_acumulados
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
) %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
salarios_acumulados <- salarios_posiciones %>%
group_by(playerID, POS) %>%
summarise(
salario_total = sum(salario_total, na.rm = TRUE)/ sum(yearID),
juegos_total = sum(juegos, na.rm = TRUE),
tipo_jugador = first(tipo_jugador),  # conservar etiqueta
.groups = "drop"
)
salarios_acumulados
salarios_acumulados2 <- salarios_posiciones %>%
group_by(playerID, POS) %>%
summarise(
salario_total = sum(salario_total, na.rm = TRUE),
juegos_total = sum(juegos, na.rm = TRUE),
anios_jugados = n_distinct(yearID),  # nuevo campo
salario_promedio_anual = salario_total / n_distinct(yearID),
tipo_jugador = first(tipo_jugador),
.groups = "drop"
)
salarios_acumulados2
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
) %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador"))
salarios_posiciones
salarios_acumulados <- salarios_posiciones %>%
group_by(playerID, POS) %>%
summarise(
salario_total = mean(salario_total, na.rm = TRUE),
juegos_total = sum(juegos, na.rm = TRUE),
tipo_jugador = first(tipo_jugador),  # conservar etiqueta
.groups = "drop"
)
salarios_acumulados
salarios_posiciones <- field %>%
left_join(salarios, by = c("playerID", "yearID")) %>%
filter(!is.na(salary)) %>%
group_by(playerID,yearID,  POS) %>%
summarise(
salario_total = salary,
juegos = G,
.groups = "drop"
) %>%
mutate(tipo_jugador = ifelse(POS == "P", "Lanzador", "Bateador")) %>%
mutate(tipo_jugador = as.factor(tipo_jugador))
salarios_posiciones
salarios_acumulados <- salarios_posiciones %>%
group_by(playerID, POS) %>%
summarise(
salario_total = mean(salario_total, na.rm = TRUE),
juegos_total = sum(juegos, na.rm = TRUE),
tipo_jugador = first(tipo_jugador),  # conservar etiqueta
.groups = "drop"
)
salarios_acumulados
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ tipo_jugador, data = salarios_acumulados)
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
esquisser(salarios_acumulados)
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ juegos_total + tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
esquisser(salarios_acumulados)
ggplot(salarios_acumulados) +
aes(
x = juegos_total,
y = salario_total,
colour = tipo_jugador
) +
geom_point() +
scale_color_hue(direction = 1) +
theme_minimal()
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ juegos_total + tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ juegos_total + tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
# Realizamos la prueba de hipótesis
k_10 <- matrix(0,0,1, ncol=3, nrow= 1,  byrow=TRUE)
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ juegos_total + tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
# Realizamos la prueba de hipótesis
k_10 <- matrix(c(0,0,1), ncol=3, nrow= 1,  byrow=TRUE)
summary(glht(modelo_salario_pos, linfct = k_10, rhs = c(0), alternative = "greater"))
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ juegos_total + tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
# Realizamos la prueba de hipótesis
k_10 <- matrix(c(0,0,1), ncol=3, nrow= 1,  byrow=TRUE)
summary(glht(modelo_salario_pos, linfct = k_10, rhs = c(0), alternative = "less"))
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ juegos_total + tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
# Realizamos la prueba de hipótesis
k_10 <- matrix(c(0,0,1), ncol=3, nrow= 1,  byrow=TRUE)
summary(glht(modelo_salario_pos, linfct = k_10, rhs = c(0), alternative = "greater"))
ggplot(salarios_acumulados) +
aes(x = juegos_total, y = salario_total, color = tipo_jugador) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, linewidth = 1.2) +
scale_color_hue(direction = 1) +
labs(
title = "Relación entre juegos jugados y salario total",
x = "Juegos totales",
y = "Salario total",
color = "Tipo de jugador"
) +
theme_minimal()
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ juegos_total * tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
# Realizamos la prueba de hipótesis
k_10 <- matrix(c(0,0,1), ncol=3, nrow= 1,  byrow=TRUE)
summary(glht(modelo_salario_pos, linfct = k_10, rhs = c(0), alternative = "greater"))
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ juegos_total * tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
# Realizamos la prueba de hipótesis
k_10 <- matrix(c(0,0,1), ncol=3, nrow= 1,  byrow=TRUE)
#summary(glht(modelo_salario_pos, linfct = k_10, rhs = c(0), alternative = "greater"))
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ juegos_total * tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
# Realizamos la prueba de hipótesis
k_10 <- matrix(c(0,0,1, 1), ncol=1, nrow= 1,  byrow=TRUE)
summary(glht(modelo_salario_pos, linfct = k_10, rhs = c(0), alternative = "greater"))
# Reliazno modelo de regresion
modelo_salario_pos <- lm(salario_total ~ juegos_total * tipo_jugador, data = salarios_acumulados)
summary(modelo_salario_pos)
# Realizamos la prueba de hipótesis
k_10 <- matrix(c(0,0,1, 1), ncol=4, nrow= 1,  byrow=TRUE)
summary(glht(modelo_salario_pos, linfct = k_10, rhs = c(0), alternative = "greater"))
grid_pred <- expand.grid(
juegos_total = seq(min(salarios_acumulados$juegos_total, na.rm = TRUE),
max(salarios_acumulados$juegos_total, na.rm = TRUE),
length.out = 200),
tipo_jugador = c("Bateador", "Lanzador")
)
grid_pred$salario_predicho <- predict(modelo_interaccion, newdata = grid_pred)
grid_pred <- expand.grid(
juegos_total = seq(min(salarios_acumulados$juegos_total, na.rm = TRUE),
max(salarios_acumulados$juegos_total, na.rm = TRUE),
length.out = 200),
tipo_jugador = c("Bateador", "Lanzador")
)
grid_pred$salario_predicho <- predict(modelo_salario_pos, newdata = grid_pred)
ggplot(salarios_acumulados, aes(x = juegos_total, y = salario_total, color = tipo_jugador)) +
geom_point(alpha = 0.6) +
geom_line(data = grid_pred, aes(y = salario_predicho), linewidth = 1.2) +
labs(
title = "Modelo ajustado: salario_total ~ juegos_total * tipo_jugador",
x = "Juegos totales",
y = "Salario total",
color = "Tipo de jugador"
) +
theme_minimal()
grid_pred <- expand.grid(
juegos_total = seq(min(salarios_acumulados$juegos_total, na.rm = TRUE),
max(salarios_acumulados$juegos_total, na.rm = TRUE),
length.out = 200),
tipo_jugador = c("Bateador", "Lanzador")
)
grid_pred$salario_predicho <- predict(modelo_salario_pos, newdata = grid_pred)
ggplot(salarios_acumulados, aes(x = juegos_total, y = salario_total, color = tipo_jugador)) +
geom_point(alpha = 0.6) +
geom_line(data = grid_pred, aes(y = salario_predicho), linewidth = 1.2) +
scale_fill_manual(
values = c(No = "#C41C10",
Si = "#147AA5")
) +
labs(
title = "Comparando nuestro modelos y nuestros datos",
x = "Juegos totales",
y = "Salario total",
color = "Tipo de jugador"
) +
theme_minimal()
grid_pred <- expand.grid(
juegos_total = seq(min(salarios_acumulados$juegos_total, na.rm = TRUE),
max(salarios_acumulados$juegos_total, na.rm = TRUE),
length.out = 200),
tipo_jugador = c("Bateador", "Lanzador")
)
grid_pred$salario_predicho <- predict(modelo_salario_pos, newdata = grid_pred)
ggplot(salarios_acumulados, aes(x = juegos_total, y = salario_total, color = tipo_jugador)) +
geom_point(alpha = 0.6) +
geom_line(data = grid_pred, aes(y = salario_predicho), linewidth = 1.2) +
scale_fill_manual(
values = c(No = "#C41C10",
Si = "#147AA5")
) +
labs(
title = "Comparando nuestro modelos y nuestros datos",
x = "Juegos totales",
y = "Salario total",
color = "Tipo de jugador"
) +
theme_minimal()
grid_pred <- expand.grid(
juegos_total = seq(min(salarios_acumulados$juegos_total, na.rm = TRUE),
max(salarios_acumulados$juegos_total, na.rm = TRUE),
length.out = 200),
tipo_jugador = c("Bateador", "Lanzador")
)
grid_pred$salario_predicho <- predict(modelo_salario_pos, newdata = grid_pred)
ggplot(salarios_acumulados, aes(x = juegos_total, y = salario_total, color = tipo_jugador)) +
geom_point(alpha = 0.6) +
geom_line(data = grid_pred, aes(y = salario_predicho), linewidth = 1.2) +
scale_fill_manual(
values = c("Bateador" = "#C41C10",
"Lanzador" = "#147AA5")
) +
labs(
title = "Comparando nuestro modelos y nuestros datos",
x = "Juegos totales",
y = "Salario total",
color = "Tipo de jugador"
) +
theme_minimal()
grid_pred <- expand.grid(
juegos_total = seq(min(salarios_acumulados$juegos_total, na.rm = TRUE),
max(salarios_acumulados$juegos_total, na.rm = TRUE),
length.out = 200),
tipo_jugador = c("Bateador", "Lanzador")
)
grid_pred$salario_predicho <- predict(modelo_salario_pos, newdata = grid_pred)
ggplot(salarios_acumulados, aes(x = juegos_total, y = salario_total, color = tipo_jugador)) +
geom_point(alpha = 0.6) +
geom_line(data = grid_pred, aes(y = salario_predicho), linewidth = 1.2) +
scale_fill_manual(
values = c(Bateador = "#C41C10",
"Lanzador" = "#147AA5")
) +
labs(
title = "Comparando nuestro modelos y nuestros datos",
x = "Juegos totales",
y = "Salario total",
color = "Tipo de jugador"
) +
theme_minimal()
grid_pred <- expand.grid(
juegos_total = seq(min(salarios_acumulados$juegos_total, na.rm = TRUE),
max(salarios_acumulados$juegos_total, na.rm = TRUE),
length.out = 200),
tipo_jugador = c("Bateador", "Lanzador")
)
grid_pred$salario_predicho <- predict(modelo_salario_pos, newdata = grid_pred)
ggplot(salarios_acumulados, aes(x = juegos_total, y = salario_total, color = tipo_jugador)) +
geom_point(alpha = 0.6) +
geom_line(data = grid_pred, aes(y = salario_predicho), linewidth = 1.2) +
scale_fill_manual(
values = c(Bateador = "#C41C10",
Lanzador = "#147AA5")
) +
labs(
title = "Comparando nuestro modelos y nuestros datos",
x = "Juegos totales",
y = "Salario total",
color = "Tipo de jugador"
) +
theme_minimal()
grid_pred <- expand.grid(
juegos_total = seq(min(salarios_acumulados$juegos_total, na.rm = TRUE),
max(salarios_acumulados$juegos_total, na.rm = TRUE),
length.out = 200),
tipo_jugador = c("Bateador", "Lanzador")
)
grid_pred$salario_predicho <- predict(modelo_salario_pos, newdata = grid_pred)
ggplot(salarios_acumulados, aes(x = juegos_total, y = salario_total, color = tipo_jugador)) +
geom_point(alpha = 0.6) +
geom_line(data = grid_pred, aes(y = salario_predicho), linewidth = 1.2) +
scale_fill_manual(
values = c("Lanzador" = "#C41C10",
Lanzador = "#147AA5")
) +
labs(
title = "Comparando nuestro modelos y nuestros datos",
x = "Juegos totales",
y = "Salario total",
color = "Tipo de jugador"
) +
theme_minimal()
grid_pred <- expand.grid(
juegos_total = seq(min(salarios_acumulados$juegos_total, na.rm = TRUE),
max(salarios_acumulados$juegos_total, na.rm = TRUE),
length.out = 200),
tipo_jugador = c("Bateador", "Lanzador")
)
grid_pred$salario_predicho <- predict(modelo_salario_pos, newdata = grid_pred)
ggplot(salarios_acumulados, aes(x = juegos_total, y = salario_total, color = tipo_jugador)) +
geom_point(alpha = 0.6) +
geom_line(data = grid_pred, aes(y = salario_predicho), linewidth = 1.2) +
scale_fill_manual(
values = c(salarios_acumulados$Bateador = "#C41C10",
grid_pred <- expand.grid(
juegos_total = seq(min(salarios_acumulados$juegos_total, na.rm = TRUE),
max(salarios_acumulados$juegos_total, na.rm = TRUE),
length.out = 200),
tipo_jugador = c("Bateador", "Lanzador")
)
grid_pred$salario_predicho <- predict(modelo_salario_pos, newdata = grid_pred)
ggplot(salarios_acumulados, aes(x = juegos_total, y = salario_total, color = tipo_jugador)) +
geom_point(alpha = 0.6) +
geom_line(data = grid_pred, aes(y = salario_predicho), linewidth = 1.2) +
scale_color_manual(
values = c(
"Bateador" = "#C41C1C",
"Lanzador" = "#147AA5"
)
)+
labs(
title = "Comparando nuestro modelos y nuestros datos",
x = "Juegos totales",
y = "Salario total",
color = "Tipo de jugador"
) +
theme_minimal()
